
ignore already tracked content:

$ git rm -r --cached .
$ git add .
$ git commit -m 'Update .gitignore' # e.g. if .gitignore was updated


---


git clone https://username@github.com/username/repository.git


---



https://gitlab.cl.uni-heidelberg.de/help/gitlab-basics/command-line-commands.md


Command Line basic commands
Start working on your project

In Git, when you copy a project you say you "clone" it. To work on a git project locally (from your own computer), you will need to clone it. To do this, sign in to GitLab.

When you are on your Dashboard, click on the project that you'd like to clone. To work in the project, you can copy a link to the Git repository through a SSH or a HTTPS protocol. SSH is easier to use after it's been setup. While you are at the Project tab, select HTTPS or SSH from the dropdown menu and copy the link using the 'Copy to clipboard' button (you'll have to paste it on your shell in the next step).

Copy the HTTPS or SSH
On the command line
Clone your project

git clone PASTE HTTPS OR SSH HERE

A clone of the project will be created in your computer.
Go into a project, directory or file to work in it

cd NAME-OF-PROJECT-OR-FILE

Go back one directory or file

cd ../

View what’s in the directory that you are in

ls

Create a directory

mkdir NAME-OF-YOUR-DIRECTORY

Create a README.md or file in directory

touch README.md
nano README.md
#### ADD YOUR INFORMATION
#### Press: control + X
#### Type: Y
#### Press: enter

Remove a file

rm NAME-OF-FILE

Remove a directory and all of its contents

rm -rf NAME-OF-DIRECTORY

View history in the command line

history

Carry out commands for which the account you are using lacks authority

You will be asked for an administrator’s password.

sudo

Tell where you are

pwd

---

Check if Git has already been installed

Git is usually preinstalled on Mac and Linux.

Type the following command and then press enter:

git --version

You should receive a message that will tell you which Git version you have on your computer. If you don’t receive a "Git version" message, it means that you need to download Git.

If Git doesn't automatically download, there's an option on the website to download manually. Then follow the steps on the installation window.

After you are finished installing, open a new shell and type "git --version" again to verify that it was correctly installed.
Add your Git username and set your email

It is important to configure your Git username and email address as every Git commit will use this information to identify you as the author.

On your shell, type the following command to add your username:

git config --global user.name "YOUR_USERNAME"

Then verify that you have the correct username:

git config --global user.name

To set your email address, type the following command:

git config --global user.email "your_email_address@example.com"

To verify that you entered your email correctly, type:

git config --global user.email

You'll need to do this only once as you are using the --global option. It tells Git to always use this information for anything you do on that system. If you want to override this with a different username or email address for specific projects, you can run the command without the --global option when you’re in that project.
Check your information

To view the information that you entered, type:

git config --global --list

Basic Git commands
Go to the master branch to pull the latest changes from there

git checkout master

Download the latest changes in the project

This is for you to work on an up-to-date copy (it is important to do every time you work on a project), while you setup tracking branches.

git pull REMOTE NAME-OF-BRANCH -u

(REMOTE: origin) (NAME-OF-BRANCH: could be "master" or an existing branch)
Create a branch

Spaces won't be recognized, so you will need to use a hyphen or underscore.

git checkout -b NAME-OF-BRANCH

Work on a branch that has already been created

git checkout NAME-OF-BRANCH

View the changes you've made

It's important to be aware of what's happening and what's the status of your changes.

git status

Add changes to commit

You'll see your changes in red when you type "git status".

git add CHANGES IN RED
git commit -m "DESCRIBE THE INTENTION OF THE COMMIT"

Send changes to gitlab.com

git push REMOTE NAME-OF-BRANCH

Delete all changes in the Git repository, but leave unstaged things

git checkout .

Delete all changes in the Git repository, including untracked files

git clean -f

Merge created branch with master branch

You need to be in the created branch.

git checkout NAME-OF-BRANCH
git merge master

Merge master branch with created branch

You need to be in the master branch.

git checkout master
git merge NAME-OF-BRANCH

---

How to create your SSH Keys

    The first thing you need to do is go to your command line and follow the instructions to generate your SSH key pair.

    Once you do that, login to GitLab with your credentials.

    On the upper right corner, click on your avatar and go to your Profile settings.

    Profile settings dropdown

    Navigate to the SSH keys tab.

    SSH Keys

    Paste your public key that you generated in the first step in the 'Key' box.

    Paste SSH public key

    Optionally, give it a descriptive title so that you can recognize it in the event you add multiple keys.

    SSH key title

    Finally, click on Add key to add it to GitLab. You will be able to see its fingerprint, its title and creation date.

    SSH key single page

    Note: Once you add a key, you cannot edit it, only remove it. In case the paste didn't work, you will have to remove the offending key and re-add it.

Congratulations! You are now ready to use Git over SSH, instead of Git over HTTP!

---


Skip to content

    69bd5a5627d5dab63e971971e4ec7815?s=52&d=identicon

Help
Toggle navigation
Toggle navigation pinning
Across GitLab

    Projects
    Activity
    Groups
    Milestones
    Issues 0
    Merge Requests 0
    Snippets 

How to add an image

The following are the steps to add images to your repository in GitLab:

Find the image that you’d like to add.

In your computer files, find the GitLab project to which you'd like to add the image (you'll find it as a regular file). Click on every file until you find exactly where you'd like to add the image. There, paste the image.

Go to your shell, and add the following commands:

Add this command for every directory that you'd like to open:

cd NAME-OF-FILE-YOU'D-LIKE-TO-OPEN

Create a new branch:

git checkout -b NAME-OF-BRANCH

Check if your image was correctly added to the directory:

ls

You should see the name of the image in the list shown.

Move up the hierarchy through directories:

cd ../

Check the status and you should see your image’s name in red:

git status

Add your changes:

git add NAME-OF-YOUR-IMAGE

Check the status and you should see your image’s name in green:

git status

Add the commit:

git commit -m “DESCRIBE COMMIT IN A FEW WORDS”

Now you can push (send) your changes (in the branch NAME-OF-BRANCH) to GitLab (the git remote named 'origin'):

git push origin NAME-OF-BRANCH

Your image will be added to your branch in your repository in GitLab. Create a Merge Request to integrate your changes to your project.


---

Merge requests are useful to integrate separate changes that you've made to a project, on different branches. This is a brief guide on how to create a merge request. For more information, check the merge requests documentation.

    Before you start, you should have already created a branch and pushed your changes to GitLab.

    You can then go to the project where you'd like to merge your changes and click on the Merge requests tab.

    Merge requests

    Click on New merge request on the right side of the screen.

    New Merge Request

    Select a source branch and click on the Compare branches and continue button.

    Select a branch

    At a minimum, add a title and a description to your merge request. Optionally, select a user to review your merge request and to accept or close it. You may also select a milestone and labels.

    New merge request page

    When ready, click on the Submit merge request button. Your merge request will be ready to be approved and published.


